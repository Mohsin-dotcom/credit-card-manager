{"ast":null,"code":"const TEST_NOT_NUMERIC_ONLY_REGEX = /(?<! )[-a-zA-Z' ]{2,26}/i;\nconst TEST_16_NUMERIC_VALUE_REGEX = /^\\d{16}$/;\nexport const creditCardValidator = values => {\n  const errors = {};\n\n  // VALIDATION FOR CARD NUMBER \n  if (!values.cardNumber) {\n    errors.cardNumber = \"Card number is required\";\n  }\n  if (values.cardNumber && !TEST_16_NUMERIC_VALUE_REGEX.test(values.cardNumber)) {\n    errors.cardNumber = \"Card number is invalid\";\n  }\n\n  // VALIDATION FOR CARD ACCOUNT HOLDER NAME\n  if (!values.accountHolder) {\n    errors.accountHolder = \"Account holder name is required\";\n  }\n  if (values.accountHolder && !TEST_NOT_NUMERIC_ONLY_REGEX.test(values.accountHolder)) {\n    errors.accountHolder = \"Account holder name is invalid\";\n  }\n\n  // VALIDATION FOR CARD EXPIRY DATE\n  if (!values.expiryMonth || !values.expiryYear) {\n    errors.expiryMonth = \"Date is required or invalid\";\n  }\n\n  // VALIDATION FOR CARD C.V.V\n  if (!values.cvv) {\n    errors.cvv = \"Card C.V.V is required\";\n  }\n  if (values.cvv && !/^\\d{3,4}$/.test(values.cvv)) {\n    errors.cvv = \"Card C.V.V is invalid\";\n  }\n  return errors;\n};","map":{"version":3,"names":["TEST_NOT_NUMERIC_ONLY_REGEX","TEST_16_NUMERIC_VALUE_REGEX","creditCardValidator","values","errors","cardNumber","test","accountHolder","expiryMonth","expiryYear","cvv"],"sources":["/Users/Mohsin/Documents/credit-card-manager/src/components/Forms/creditCardValidator.ts"],"sourcesContent":["import { CreditCardFormValues } from \"./CreditcardForm\";\n\ntype CreditCardFormErrors = CreditCardFormValues;\n\nconst TEST_NOT_NUMERIC_ONLY_REGEX = /(?<! )[-a-zA-Z' ]{2,26}/i;\n\nconst TEST_16_NUMERIC_VALUE_REGEX = /^\\d{16}$/\n\nexport const creditCardValidator = (\n  values: CreditCardFormValues\n): CreditCardFormErrors => {\n  const errors: CreditCardFormErrors = {};\n\n  // VALIDATION FOR CARD NUMBER \n  if (!values.cardNumber) {\n    errors.cardNumber = \"Card number is required\";\n  }\n\n  if (\n    values.cardNumber &&\n    !TEST_16_NUMERIC_VALUE_REGEX.test(values.cardNumber)\n  ) {\n    errors.cardNumber = \"Card number is invalid\";\n  }\n\n\n\n\n  // VALIDATION FOR CARD ACCOUNT HOLDER NAME\n  if (!values.accountHolder) {\n    errors.accountHolder = \"Account holder name is required\";\n  }\n\n  if (\n    values.accountHolder &&\n    !TEST_NOT_NUMERIC_ONLY_REGEX.test(values.accountHolder)\n  ) {\n    errors.accountHolder = \"Account holder name is invalid\";\n  }\n\n\n\n  // VALIDATION FOR CARD EXPIRY DATE\n  if (!values.expiryMonth || !values.expiryYear) {\n    errors.expiryMonth = \"Date is required or invalid\";\n  }\n\n\n\n  // VALIDATION FOR CARD C.V.V\n  if (!values.cvv) {\n    errors.cvv = \"Card C.V.V is required\";\n  }\n\n  if (values.cvv && !/^\\d{3,4}$/.test(values.cvv)) {\n    errors.cvv = \"Card C.V.V is invalid\";\n  }\n\n  return errors;\n};\n"],"mappings":"AAIA,MAAMA,2BAA2B,GAAG,0BAA0B;AAE9D,MAAMC,2BAA2B,GAAG,UAAU;AAE9C,OAAO,MAAMC,mBAAmB,GAC9BC,MAA4B,IACH;EACzB,MAAMC,MAA4B,GAAG,CAAC,CAAC;;EAEvC;EACA,IAAI,CAACD,MAAM,CAACE,UAAU,EAAE;IACtBD,MAAM,CAACC,UAAU,GAAG,yBAAyB;EAC/C;EAEA,IACEF,MAAM,CAACE,UAAU,IACjB,CAACJ,2BAA2B,CAACK,IAAI,CAACH,MAAM,CAACE,UAAU,CAAC,EACpD;IACAD,MAAM,CAACC,UAAU,GAAG,wBAAwB;EAC9C;;EAKA;EACA,IAAI,CAACF,MAAM,CAACI,aAAa,EAAE;IACzBH,MAAM,CAACG,aAAa,GAAG,iCAAiC;EAC1D;EAEA,IACEJ,MAAM,CAACI,aAAa,IACpB,CAACP,2BAA2B,CAACM,IAAI,CAACH,MAAM,CAACI,aAAa,CAAC,EACvD;IACAH,MAAM,CAACG,aAAa,GAAG,gCAAgC;EACzD;;EAIA;EACA,IAAI,CAACJ,MAAM,CAACK,WAAW,IAAI,CAACL,MAAM,CAACM,UAAU,EAAE;IAC7CL,MAAM,CAACI,WAAW,GAAG,6BAA6B;EACpD;;EAIA;EACA,IAAI,CAACL,MAAM,CAACO,GAAG,EAAE;IACfN,MAAM,CAACM,GAAG,GAAG,wBAAwB;EACvC;EAEA,IAAIP,MAAM,CAACO,GAAG,IAAI,CAAC,WAAW,CAACJ,IAAI,CAACH,MAAM,CAACO,GAAG,CAAC,EAAE;IAC/CN,MAAM,CAACM,GAAG,GAAG,uBAAuB;EACtC;EAEA,OAAON,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}